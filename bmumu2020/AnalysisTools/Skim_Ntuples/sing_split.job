#!/bin/bash

#####################################
#Setup slurm job
#####################################
#SBATCH --account=staff
#SBATCH --partition=medium
#SBATCH --time=470:00
#SBATCH --mem=2500
#SBATCH --constraint="computeserver|clusternode"
##SBATCH --exclude=cs02
#SBATCH --job-name=mySkim
#####################################
#Get variables from outside
#####################################
OUTDIR=$1
IJOB=$2
IPTCODE=$3
JOBNAME=$4
#####################################
#Set variables for job
#####################################
HOST=$(hostname)
SUBMDIR=$(pwd)
JID="${SLURM_JOB_ID:-$$}"
#JOBNAME="mySkim_${JID}"
SCRATCHDIR="/nfs/${HOST}/scratch/${USER}"
JOBDIR="${SCRATCHDIR}/${JOBNAME}/${SLURM_JOB_ID}"
OPTFILE=output_${SLURM_JOB_ID}.root
GITDIR=$(git rev-parse --show-toplevel)
SCRIPTNAME="script_${JID}.sh"
PAYLOAD="${JOBDIR}/${SCRIPTNAME}"
logfile="$HOME/AnalysisTools/Skim_Ntuples/log_${JID}.log"

EXCUTABLE="$HOME/AnalysisTools/Skim_Ntuples/skim_trees.py"
SRCDIR="$HOME/AnalysisTools/Skim_Ntuples/"
# command line overwrite
#SRCDIR=$(realpath ${1:-$SRCDIR})

#####################################
#Pring variables used
#####################################
echo "INFO::ARGUMENTS USED:"
echo " $*"

echo "INFO::RUNNING ON: $HOST"
echo " JOBNAME     =$JOBNAME"
echo "  SUBMDIR    = $SUBMDIR"
echo "  SCRATCHDIR = $SCRATCHDIR"
echo "  JOBDIR     = $JOBDIR"
echo "  OUTDIR     = $OUTDIR"
echo "  GITDIR     = $GITDIR"
echo "  SRCDIR	   = $SRCDIR"
echo "  PAYLOAD    = $PAYLOAD"
echo "  logfile    = $logfile"
echo ""
echo "  JOB INDEX  = $IJOB"
echo "  EXECUTABLE = $IPTCODE"
#####################################
#Make directories, setup ROOT, etc
#####################################
if [ -d $SCRATCHDIR ]; then
  mkdir -p $JOBDIR
  cd $JOBDIR
else
  echo "ERROR::No SCRATCHDIR=$SCRATCHDIR present"
  kill -INT $$
fi
(
echo "INFO::CURRENT JOB DIRECTORY:"
pwd

 # Setup PAYLOAD script
  #
  # Add your commands in the indicated section
  # Note on variables within this script:
  # - Any variables which should only be evaluated at executiontime
  #   of the script contents must be escaped by a '\' like e.g.'\$HOST'.
  # - Any variables to be evaluated when the script contents are written
  #   must not be escaped.
  #
cat > $PAYLOAD <<EOF

#!/bin/bash
# DO NOT MODIFY THIS UPPER PART
echo "Executing PAYLOAD script: $0"
date
cd $JOBDIR
source \$ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh \$@

### PUT YOUR USER COMMANDS BELOW THIS LINE.
echo "setting up root"

#lsetup "root 6.12.06-x86_64-slc6-gcc62-opt"
#lsetup "lcgenv -p LCG_92 x86_64-slc6-gcc62-opt HepPDT"
#lsetup "gcc gcc620_x86_64_slc6"
#lsetup "python 2.7.13-x86_64-slc6-gcc62"
#export CPLUS_INCLUDE_PATH=:/cvmfs/sft.cern.ch/lcg/releases/LCG_92/HepPDT/2.06.01/x86_64-slc6-gcc62-opt/include/

lsetup "root 6.18.04-x86_64-centos7-gcc8-opt"
lsetup "lcgenv -p LCG_96b x86_64-centos7-gcc8-opt HepPDT"
export CPLUS_INCLUDE_PATH=:/cvmfs/sft.cern.ch/lcg/releases/LCG_96b/HepPDT/2.06.01/x86_64-centos7-gcc8-opt/include/

#####################################
#Compile and/or run
#####################################
cp -r $SUBMDIR/* .

#DO NOT REMOVE, this is needed for the scripts to know the commit and save it in the ntuples.
cp -r $GITDIR/.git .   

echo "INFO::BEFORE RUNNING:"
ls -ltr

cp $EXCUTABLE .

echo "RUNNING"

#PYTHON_PATH="/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/python/2.7.13-x86_64-slc6-gcc62/2.7.13-597a5/x86_64-slc6-gcc62-opt/bin/"
export PYTHON_PATH=:/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/python/3.7.4-x86_64-centos7/bin/
python "$IPTCODE" "$IJOB" "$OPTFILE" "$JOBNAME"

#####################################
#Retrieve output and clean
#####################################
echo "INFO::AFTER RUNNING:"

ls -ltr

echo "Making $OUTDIR"
mkdir -p $OUTDIR 

echo "$OPTFILE ---> $OUTDIR"
cp $OPTFILE $OUTDIR

chmod 660 $OUTDIR/$OPTFILE

cd ${SCRATCHDIR}
rm -rf $JOBDIR
#####################################
### PUT YOUR USER COMMANDS ABOVE THIS LINE.

echo "Done with PAYLOAD script: \$0"
date
EOF

  # make it executable
  chmod a+x $PAYLOAD

  # checksource code path for potential nfs mount
  addmnts=""
  fullSRCDIR=$(realpath $SRCDIR)
  firstlevels=$(echo $fullSRCDIR | sed -e 's#\(/[^/]\+/[^/]\+\)/.*$#\1#g')
  [[ $firstlevels == /nfs/* ]] && addmnts=",$firstlevels"
 
  # setup ATLAS for Siegen
  # make sure localscratch directory on the execution host
  # and the sourcecode directory are mounted
  # into the container and then execute the PAYLOAD script
  /products/atlas/rc/localSetup/setupATLASSi.sh \
    -B /nfs/${HOST}${addmnts} \
    -r "$PAYLOAD"
 # show whats left in the directory
  ls -l 
) >> $logfile 2>&1 # end of redirection
# indicate logfile location
echo ""
echo ">>> $(pwd)/$logfile"
